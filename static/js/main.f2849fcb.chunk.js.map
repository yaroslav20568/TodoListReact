{"version":3,"sources":["redux/actions/todoAction.js","redux/reducers/todoReducer.js","components/TodoItem.jsx","components/TodoList.jsx","redux/actions/themeAction.js","redux/reducers/themeReducer.js","components/ToggleTheme.jsx","App.js","redux/store.js","index.js"],"names":["TODO_ADD","TODO_COMPLETE","TODO_DELETE","arrayTodos","JSON","parse","localStorage","getItem","TodoItem","index","title","isChecked","date","time","dispatch","useDispatch","className","htmlFor","type","id","onChange","payload","checked","onClick","TodoList","todos","inputRef","useRef","getDate","currentDate","toDateString","split","getZero","num","addTodo","current","value","charAt","toUpperCase","substr","toLowerCase","Date","getHours","getMinutes","ref","onKeyDown","e","keyCode","addTodoFromInput","placeholder","map","todo","length","width","height","fill","xmlns","d","stroke","strokeWidth","cx","cy","r","rx","ry","THEME_CHANGE","themeValue","ToggleTheme","App","useSelector","state","theme","rootReducer","combineReducers","action","slice","store","createStore","composeWithDevTools","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2849fcb.chunk.js","sourcesContent":["const TODO_ADD = 'TODO_ADD';\r\nconst TODO_COMPLETE = 'TODO_COMPLETE';\r\nconst TODO_DELETE = 'TODO_DELETE';\r\n\r\nexport { TODO_ADD, TODO_COMPLETE, TODO_DELETE };","import { TODO_ADD, TODO_COMPLETE, TODO_DELETE } from '../actions/todoAction';\r\n\r\nlet arrayTodos = JSON.parse(localStorage.getItem('array')) || [];\r\n\r\nexport default function todoReducer(state = arrayTodos, action) {\r\n    switch (action.type) {\r\n        case TODO_ADD:\r\n            return [...state, action.payload];\r\n            break;\r\n        \r\n        case TODO_COMPLETE:\r\n            return state.map((todo, index) => {\r\n                if(action.payload === index) {\r\n                    todo.isChecked = !todo.isChecked;\r\n                }\r\n                return todo;\r\n            });\r\n            break;\r\n        \r\n        case TODO_DELETE:\r\n            return [...state.slice(0, action.payload), ...state.slice(action.payload + 1, state.length)]\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const todoAddAction = (payload) => ({type: TODO_ADD, payload: payload});\r\nexport const todoCompleteAction = (payload) => ({type: TODO_COMPLETE, payload: payload});\r\nexport const todoDeleteAction = (payload) => ({type: TODO_DELETE, payload: payload});","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { todoCompleteAction, todoDeleteAction } from '../redux/reducers/todoReducer';\r\n\r\n\r\nexport default function TodoItem({index, title, isChecked, date, time}) {\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <div className=\"todo\">\r\n            <div className=\"todo__enumaration\">{`${index + 1}.`}</div>\r\n            <label className=\"todo__label\" htmlFor={`checkbox${index + 1}`}>\r\n                <input\r\n                    className=\"todo__checkbox\"\r\n                    type=\"checkbox\"\r\n                    id={`checkbox${index + 1}`}\r\n                    onChange={() => dispatch(todoCompleteAction(index))}\r\n                    checked={isChecked}\r\n                />\r\n                <div className=\"todo__fake-checkbox\"></div>\r\n            </label>\r\n            <div className=\"todo__title\">{title}</div>\r\n            <div className=\"todo__date\">{date}</div>\r\n            <div className=\"todo__time\">{time}</div>\r\n            <div className=\"todo__delete\" onClick={() => dispatch(todoDeleteAction(index))}></div>\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { todoAddAction } from '../redux/reducers/todoReducer';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nfunction TodoList({ todos }) {\r\n    const inputRef = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    function getDate(date) {\r\n        let currentDate = date.toDateString().split(' ');\r\n        return `${currentDate[2]} ${currentDate[1]}`;\r\n    }\r\n\r\n    function getTime(date) {\r\n        return `${getZero(date.getHours())}:${getZero(date.getMinutes())}`;\r\n    }\r\n\r\n    function getZero(num) {\r\n        if(num < 0 || num <= 9) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function addTodo() {\r\n        if(inputRef.current.value) {\r\n            // dispatch({type: 'TODO_ADD', payload: {title: inputRef.current.value.charAt(0).toUpperCase() + inputRef.current.value.substr(1).toLowerCase(), isChecked: false, date: getDate(new Date()), time: getTime(new Date())}});\r\n            dispatch(todoAddAction({title: inputRef.current.value.charAt(0).toUpperCase() + inputRef.current.value.substr(1).toLowerCase(), isChecked: false, date: getDate(new Date()), time: getTime(new Date())}));\r\n            inputRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    function addTodoFromInput(e) {\r\n        if(e.keyCode === 13) {\r\n            addTodo();\r\n        }\r\n    }\r\n    \r\n    function addTodoFromBtn() {\r\n        if(inputRef.current.value) {\r\n            addTodo();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-list show\">\r\n            <div className=\"container\">\r\n                <div className=\"todo-list__inner\">\r\n                    <h1 className=\"todo-list__title\">Todo list</h1>\r\n\r\n                    <div className=\"todo-list__add\">\r\n                        <input ref={inputRef} onKeyDown={(e) => addTodoFromInput(e)} type=\"text\" placeholder=\"Enter todo\" />\r\n                        <button onClick={() => addTodoFromBtn()}></button>\r\n                    </div>\r\n\r\n                    <ul className=\"todo-list__content\">\r\n                        {todos.map((todo, index) => <TodoItem key={`todo_${index + 1}`}  index={index} {...todo} />)}\r\n                    </ul>\r\n\r\n                    {\r\n                        todos.length === 0 &&\r\n                        <div className=\"todo-list__message\">\r\n                            <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.571 38.155c3.929-2.38 14-5.714 22.858 0\" stroke=\"#000\" strokeWidth=\"3\"/><circle cx=\"25\" cy=\"25\" r=\"23\" stroke=\"#000\" strokeWidth=\"4\"/><ellipse cx=\"34\" cy=\"17\" rx=\"5\" ry=\"4\" fill=\"#000\"/><ellipse cx=\"33.5\" cy=\"17.5\" rx=\"2.5\" ry=\"1.5\" fill=\"#fff\"/><ellipse cx=\"16\" cy=\"17\" rx=\"5\" ry=\"4\" fill=\"#000\"/><ellipse cx=\"16.5\" cy=\"17.5\" rx=\"2.5\" ry=\"1.5\" fill=\"#fff\"/></svg>\r\n                            <h4 className=\"message__title\">Увы, список пуст! Заполните его!</h4>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","const THEME_CHANGE = 'THEME_CHANGE';\r\n\r\nexport default THEME_CHANGE;","import THEME_CHANGE from '../actions/themeAction';\r\n\r\nlet themeValue = JSON.parse(localStorage.getItem('themeValue')) || false;\r\n\r\nexport default function themeReducer(state = themeValue, action) {\r\n    switch (action.type) {\r\n        case THEME_CHANGE:\r\n            return !state;\r\n            break;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const themeChangeAction = () => ({type: THEME_CHANGE});","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { themeChangeAction } from '../redux/reducers/themeReducer';\r\n\r\n\r\nfunction ToggleTheme({ themeValue }) {\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <div className=\"toggle-theme\">\r\n            <label htmlFor=\"checkbox_1\">\r\n                <input\r\n                    className=\"toggle-theme__checkbox\"\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox_1\"\r\n                    onChange={() => dispatch(themeChangeAction())} \r\n                    checked={themeValue}\r\n                />\r\n                <div className=\"toggle-theme__fake-checkbox\"></div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleTheme;","import React from 'react';\nimport TodoList from './components/TodoList';\nimport ToggleTheme from './components/ToggleTheme';\n\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const arrayTodos = useSelector(state => state.todos);\n  const themeValue = useSelector(state => state.theme);\n  \n  return (\n      <div className={themeValue ? 'theme_dark' : 'theme_light'}>\n        <TodoList todos={arrayTodos} />\n        <ToggleTheme themeValue={themeValue} />\n      </div>\n  )\n}\n\nexport default App;","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { themeReducer, todoReducer} from './reducers/importReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    todos: todoReducer,\r\n    theme: themeReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('array', JSON.stringify(store.getState().todos));\r\n    localStorage.setItem('themeValue', store.getState().theme);\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.sass';\nimport App from './App';\n\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["context.js","components/TodoItem.jsx","components/TodoList.jsx","components/ToggleTheme.jsx","App.js","index.js"],"names":["todoContext","React","createContext","TodoItem","index","title","isChecked","date","time","useContext","completedTodo","deleteTodo","className","htmlFor","type","id","onChange","bind","checked","onClick","TodoList","todos","setTodos","inputRef","useRef","getDate","currentDate","toDateString","split","getZero","num","addTodo","current","value","charAt","toUpperCase","substr","toLowerCase","Date","getHours","getMinutes","localStorage","setItem","JSON","stringify","ref","onKeyDown","e","keyCode","addTodoFromInput","placeholder","map","todo","length","width","height","fill","xmlns","d","stroke","strokeWidth","cx","cy","r","rx","ry","ToggleTheme","themeValue","setThemeValue","App","useState","parse","getItem","arrayTodos","setArrayTodos","Provider","indexTodo","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dab4fd7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst todoContext = React.createContext();\r\n\r\nexport default todoContext;","import React, { useContext } from 'react';\r\nimport todoContext from '../context';\r\n\r\n\r\nexport default function TodoItem({index, title, isChecked, date, time}) {\r\n    const {completedTodo, deleteTodo} = useContext(todoContext);\r\n    \r\n    return (\r\n        <div className=\"todo\">\r\n            <div className=\"todo__enumaration\">{`${index + 1}.`}</div>\r\n            <label className=\"todo__label\" htmlFor={`checkbox${index + 1}`}>\r\n                <input\r\n                    className=\"todo__checkbox\"\r\n                    type=\"checkbox\"\r\n                    id={`checkbox${index + 1}`}\r\n                    onChange={completedTodo.bind(null, index)}\r\n                    checked={isChecked}\r\n                />\r\n                <div className=\"todo__fake-checkbox\"></div>\r\n            </label>\r\n            <div className=\"todo__title\">{title}</div>\r\n            <div className=\"todo__date\">{date}</div>\r\n            <div className=\"todo__time\">{time}</div>\r\n            <div className=\"todo__delete\" onClick={deleteTodo.bind(null, index)}></div>\r\n        </div>\r\n    )\r\n}","import React, { useRef } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nfunction TodoList({todos, setTodos, completedTodo, deleteTodo}) {\r\n    const inputRef = useRef();\r\n\r\n    function getDate(date) {\r\n        let currentDate = date.toDateString().split(' ');\r\n        return `${currentDate[2]} ${currentDate[1]}`;\r\n    }\r\n\r\n    function getTime(date) {\r\n        return `${getZero(date.getHours())}:${getZero(date.getMinutes())}`;\r\n    }\r\n\r\n    function getZero(num) {\r\n        if(num < 0 || num <= 9) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function addTodo() {\r\n        if(inputRef.current.value) {\r\n            todos = [...todos, {title: inputRef.current.value.charAt(0).toUpperCase() + inputRef.current.value.substr(1).toLowerCase(), isChecked: false, date: getDate(new Date()), time: getTime(new Date())}];\r\n            setTodos(todos);\r\n            localStorage.setItem('array', JSON.stringify(todos));\r\n            inputRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    function addTodoFromInput(e) {\r\n        if(e.keyCode === 13) {\r\n            addTodo();\r\n        }\r\n    }\r\n    \r\n    function addTodoFromBtn() {\r\n        if(inputRef.current.value) {\r\n            addTodo();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-list show\">\r\n            <div className=\"container\">\r\n                <div className=\"todo-list__inner\">\r\n                    <h1 className=\"todo-list__title\">Todo list</h1>\r\n\r\n                    <div className=\"todo-list__add\">\r\n                        <input ref={inputRef} onKeyDown={(e) => addTodoFromInput(e)} type=\"text\" placeholder=\"Enter todo\" />\r\n                        <button onClick={() => addTodoFromBtn()}></button>\r\n                    </div>\r\n\r\n                    <ul className=\"todo-list__content\">\r\n                        {todos.map((todo, index) => <TodoItem key={`todo_${index + 1}`}  index={index} {...todo} completedTodo={completedTodo} deleteTodo={deleteTodo} />)}\r\n                    </ul>\r\n\r\n                    {\r\n                        todos.length === 0 &&\r\n                        <div className=\"todo-list__message\">\r\n                            <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.571 38.155c3.929-2.38 14-5.714 22.858 0\" stroke=\"#000\" strokeWidth=\"3\"/><circle cx=\"25\" cy=\"25\" r=\"23\" stroke=\"#000\" strokeWidth=\"4\"/><ellipse cx=\"34\" cy=\"17\" rx=\"5\" ry=\"4\" fill=\"#000\"/><ellipse cx=\"33.5\" cy=\"17.5\" rx=\"2.5\" ry=\"1.5\" fill=\"#fff\"/><ellipse cx=\"16\" cy=\"17\" rx=\"5\" ry=\"4\" fill=\"#000\"/><ellipse cx=\"16.5\" cy=\"17.5\" rx=\"2.5\" ry=\"1.5\" fill=\"#fff\"/></svg>\r\n                            <h4 className=\"message__title\">Увы, список пуст! Заполните его!</h4>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\n\r\nfunction ToggleTheme({themeValue, setThemeValue}) {\r\n    function themeChange() {\r\n        setThemeValue(themeValue = !themeValue);\r\n        localStorage.setItem('themeValue', themeValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"toggle-theme\">\r\n            <label htmlFor=\"checkbox_1\">\r\n                <input\r\n                    className=\"toggle-theme__checkbox\"\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox_1\"\r\n                    onChange={themeChange.bind(null)} \r\n                    checked={themeValue}\r\n                />\r\n                <div className=\"toggle-theme__fake-checkbox\"></div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleTheme;","import React, {useState} from 'react';\nimport TodoList from './components/TodoList';\nimport ToggleTheme from './components/ToggleTheme';\nimport todoContext from './context';\n\n\nfunction App() {\n  let [arrayTodos, setArrayTodos] = useState(JSON.parse(localStorage.getItem('array')) || []);\n  const [themeValue, setThemeValue] = useState(JSON.parse(localStorage.getItem('themeValue')) || false);\n\n  function completedTodo(indexTodo) {\n    setArrayTodos(\n      arrayTodos.map((todo, index) => {\n        if(index === indexTodo) {\n          todo.isChecked = !todo.isChecked;\n        }\n        return todo;\n      })\n    );\n    localStorage.setItem('array', JSON.stringify(arrayTodos));\n  }\n\n  function deleteTodo(indexTodo) {\n    arrayTodos = [...arrayTodos.slice(0, indexTodo), ...arrayTodos.slice(indexTodo + 1, arrayTodos.length)];\n    setArrayTodos(arrayTodos);\n    localStorage.setItem('array', JSON.stringify(arrayTodos));\n  }\n  \n  return (\n    <todoContext.Provider value={{completedTodo, deleteTodo}}>\n      <div className={themeValue ? 'theme_dark' : 'theme_light'}>\n        <TodoList todos={arrayTodos} setTodos={setArrayTodos} />\n        <ToggleTheme themeValue={themeValue} setThemeValue={setThemeValue} />\n      </div>\n    </todoContext.Provider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.sass';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}